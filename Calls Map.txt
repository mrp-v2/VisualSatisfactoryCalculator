new SatisfactorySave(string);
	FSaveHeader.Parse(BinaryReader);
		SaveHeaderVersion;
		ESessionVisibility;
	FSaveHeader.SaveVersion;
	FSaveCustomVersion;
	SatisfactorySave.LoadData(BinaryReader);
		SaveEntity.TypeID;
		new SaveEntity(BinaryReader);
			new SaveObject(BinaryReader);
		SaveComponent.TypeID;
		new SaveComponent(BinaryReader);
		SaveObject.ParseData(int, BinaryReader);
			SerializedFields.Parse(int, BinaryReader);
				new SerializedFields();
				SerializedProperty.Parse(BinaryReader);
					{classes extending SerializedProperty}.TypeName;
					{classes extending SerializedProperty}.Parse(...);
		new ObjectReference(BinaryReader);
	BinaryIOExtensions.ReadChunkInfo(BinaryReader);
		new ChunkInfo();
	ChunkInfo.CompressedSize;
	ChunkInfo.Magic;
	ChunkInfo.UncompressedSize;
	new ZlibStream(Stream, CompressionMode, bool);
SatisfactorySave.Header;
new SaveRootModel(FSaveHeader);
	new SaveObjectModel(string);
new EditorTreeNode(string);
SatisfactorySave.Entries;
SaveObject.TypePath;
EditorTreeNode.AddChild(IEnumerable<string>, SaveObject);
BuildNode(ObservableCollection<SaveObjectModel>, EditorTreeNode);
	EditorTreeNode.Children;
	EditorTreeNode.Name;
	new SaveObjectModel(string);
	EditorTreeNode.Content;
	new SaveEntityModel(SaveEntity);
		new SaveObjectModel(SaveEntity);
	new SaveComponentModel(SaveComponent);
SaveObjectModel.IsExpanded;
SaveObjectModel.Items;
SaveObjectModel.FindChild(string, bool);
SaveObjectModel.Fields;
SerializedPropertyViewModel.PropertyName;
ArrayPropertyViewModel.Elements;
ObjectPropertyViewModel.Str2;